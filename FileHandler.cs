namespace uwap.WebFramework.Plugins;

public partial class NotesPlugin : Plugin
{
	public override byte[]? GetFile(string relPath, string pathPrefix, string domain)
		=> relPath switch
		{
			"/icon.ico" => (byte[]?)PluginFiles_ResourceManager.GetObject("File0"),
			"/icon.png" => (byte[]?)PluginFiles_ResourceManager.GetObject("File1"),
			"/icon.svg" => (byte[]?)PluginFiles_ResourceManager.GetObject("File2"),
			"/manifest.json" => System.Text.Encoding.UTF8.GetBytes($"{{\r\n  \"name\": \"Notes ({Parsers.DomainMain(domain)})\",\r\n  \"short_name\": \"Notes\",\r\n  \"start_url\": \"{(pathPrefix == "" ? "/" : pathPrefix)}\",\r\n  \"display\": \"minimal-ui\",\r\n  \"background_color\": \"#000000\",\r\n  \"theme_color\": \"#202024\",\r\n  \"orientation\": \"portrait-primary\",\r\n  \"icons\": [\r\n    {{\r\n      \"src\": \"{pathPrefix}/icon.svg\",\r\n      \"type\": \"image/svg+xml\",\r\n      \"sizes\": \"any\"\r\n    }},\r\n    {{\r\n      \"src\": \"{pathPrefix}/icon.png\",\r\n      \"type\": \"image/png\",\r\n      \"sizes\": \"512x512\"\r\n    }},\r\n    {{\r\n      \"src\": \"{pathPrefix}/icon.ico\",\r\n      \"type\": \"image/x-icon\",\r\n      \"sizes\": \"16x16 24x24 32x32 48x48 64x64 72x72 96x96 128x128 256x256\"\r\n    }}\r\n  ],\r\n  \"launch_handler\": {{\r\n    \"client_mode\": \"navigate-new\"\r\n  }},\r\n  \"related_applications\": [\r\n    {{\r\n      \"platform\": \"webapp\",\r\n      \"url\": \"{pathPrefix}/manifest.json\"\r\n    }}\r\n  ],\r\n  \"offline_enabled\": false,\r\n  \"omnibox\": {{\r\n    \"keyword\": \"notes\"\r\n  }},\r\n  \"version\": \"0.4.4\"\r\n}}\r\n"),
			"/more.js" => System.Text.Encoding.UTF8.GetBytes($"let id = GetId();\r\n\r\nfunction GetId() {{\r\n    try {{\r\n        let query = new URLSearchParams(window.location.search);\r\n        if (query.has(\"id\")) {{\r\n            return query.get(\"id\");\r\n        }} else {{\r\n            return \"default\";\r\n        }}\r\n    }} catch {{\r\n        return \"default\";\r\n    }}\r\n}}\r\n\r\nasync function CreateNote() {{\r\n    let name = document.querySelector(\"#name\");\r\n    if (name.value === \"\") {{\r\n        ShowError(\"Enter a name.\");\r\n    }} else {{\r\n        let response = await fetch(\"/api{pathPrefix}/create-note?id=\" + id + \"&name=\" + encodeURIComponent(name.value));\r\n        if (response.status === 200) {{\r\n            let text = await response.text();\r\n            if (text.startsWith(\"{(pathPrefix == "" ? "/" : pathPrefix)}?id=\")) {{\r\n                window.location.assign(text);\r\n            }} else {{\r\n                ShowError(\"Connection failed.\");\r\n            }}\r\n        }} else {{\r\n            ShowError(\"Connection failed.\");\r\n        }}\r\n    }}\r\n}}\r\n\r\nasync function CreateFolder() {{\r\n    let name = document.querySelector(\"#name\");\r\n    if (name.value === \"\") {{\r\n        ShowError(\"Enter a name.\");\r\n    }} else {{\r\n        let response = await fetch(\"/api{pathPrefix}/create-folder?id=\" + id + \"&name=\" + encodeURIComponent(name.value));\r\n        if (response.status === 200) {{\r\n            let text = await response.text();\r\n            if (text.startsWith(\"{(pathPrefix == "" ? "/" : pathPrefix)}?id=\")) {{\r\n                window.location.assign(text);\r\n            }} else {{\r\n                ShowError(\"Connection failed.\");\r\n            }}\r\n        }} else {{\r\n            ShowError(\"Connection failed.\");\r\n        }}\r\n    }}\r\n}}\r\n\r\nasync function Rename() {{\r\n    let rename = document.querySelector(\"#rename\");\r\n    if (rename.value === \"\") {{\r\n        ShowError(\"Enter a new name.\");\r\n    }} else {{\r\n        let response = await fetch(\"/api{pathPrefix}/rename?id=\" + id + \"&name=\" + encodeURIComponent(rename.value));\r\n        if (response.status === 200) {{\r\n            let text = await response.text();\r\n            if (text.startsWith(\"{(pathPrefix == "" ? "/" : pathPrefix)}\")) {{\r\n                window.location.assign(text);\r\n            }} else {{\r\n                ShowError(\"Connection failed.\");\r\n            }}\r\n        }} else {{\r\n            ShowError(\"Connection failed.\");\r\n        }}\r\n    }}\r\n}}\r\n\r\nasync function Delete() {{\r\n    let deleteElement = document.querySelector(\"#delete\");\r\n    if (deleteElement.firstElementChild.textContent === \"Really?\") {{\r\n        let response = await fetch(\"/api{pathPrefix}/delete?id=\" + id);\r\n        if (response.status === 200) {{\r\n            let text = await response.text();\r\n            if (text.startsWith(\"{(pathPrefix == "" ? "/" : pathPrefix)}\")) {{\r\n                window.location.assign(text);\r\n            }} else {{\r\n                ShowError(\"Connection failed.\");\r\n            }}\r\n        }} else {{\r\n            ShowError(\"Connection failed.\");\r\n        }}\r\n    }} else {{\r\n        deleteElement.firstElementChild.textContent = \"Really?\";\r\n    }}\r\n}}"),
			"/move.js" => System.Text.Encoding.UTF8.GetBytes($"async function Move() {{\r\n    try {{\r\n        var to = GetQuery(\"to\");\r\n        if ((await fetch(\"/api{pathPrefix}/move?id=\" + GetQuery(\"id\") + \"&to=\" + to)).status === 200) {{\r\n            if (to === \"default\")\r\n                window.location.assign(\"{(pathPrefix == "" ? "/" : pathPrefix)}\");\r\n            else window.location.assign(\"{(pathPrefix == "" ? "/" : pathPrefix)}?id=\" + to);\r\n            return;\r\n        }}\r\n    }} catch {{\r\n    }}\r\n    ShowError(\"Connection failed.\");\r\n}}\r\n\r\nfunction GetQuery(q) {{\r\n    try {{\r\n        let query = new URLSearchParams(window.location.search);\r\n        if (query.has(q)) {{\r\n            return query.get(q);\r\n        }} else {{\r\n            return \"null\";\r\n        }}\r\n    }} catch {{\r\n        return \"null\";\r\n    }}\r\n}}"),
			"/note.js" => System.Text.Encoding.UTF8.GetBytes($"let ch = 0;\r\nlet ta = document.querySelector('#text');\r\nlet editor = document.querySelector('#editor');\r\nlet sidebar = document.querySelector('.sidebar');\r\nlet full = document.querySelector('.full');\r\nlet save = document.querySelector('#save');\r\nlet back = document.querySelector('#back');\r\nwindow.onresize = Resize;\r\nta.onclick = Refocus;\r\nResize();\r\nLoad();\r\ndocument.addEventListener('keydown', e => {{\r\n    if (e.ctrlKey && e.key === 's') {{\r\n        e.preventDefault();\r\n        Save();\r\n    }}\r\n}});\r\n\r\nfunction Resize() {{\r\n    let fullComp = window.getComputedStyle(full);\r\n    let editorComp = window.getComputedStyle(editor);\r\n    let newHeight = Math.floor(window.visualViewport.height - parseFloat(editorComp['marginTop']) - parseFloat(fullComp['paddingTop']) - parseFloat(fullComp['paddingBottom']));\r\n    editor.style.flex = '1';\r\n    editor.style.height = newHeight + 'px';\r\n    Refocus();\r\n}}\r\n\r\nfunction Refocus() {{\r\n    let nh = ta.clientHeight;\r\n    if (ch > nh && document.activeElement === ta) {{\r\n        ta.blur();\r\n        ta.focus();\r\n    }}\r\n    ch = nh;\r\n}}\r\n\r\nasync function Load() {{\r\n    let response = await fetch(\"/api{pathPrefix}/get?id=\" + GetId());\r\n    switch (response.status) {{\r\n        case 200:\r\n            ta.value = await response.text();\r\n            ta.placeholder = \"Enter something...\";\r\n            break;\r\n        case 201:\r\n            ta.value = \"\";\r\n            ta.placeholder = \"Enter something...\";\r\n            ta.focus();\r\n            break;\r\n        default:\r\n            ta.value = \"\";\r\n            ta.placeholder = \"Error loading this note's content! Try reloading the page.\";\r\n            let save = document.querySelector(\"#save\");\r\n            save.innerText = \"Error!\";\r\n            save.className = \"red\";\r\n    }}\r\n}}\r\n\r\nfunction TextChanged() {{\r\n    save.innerText = \"Save\";\r\n    save.className = \"green\";\r\n}}\r\n\r\nasync function Save() {{\r\n    back.innerText = \"Back\";\r\n    save.innerText = \"Saving...\";\r\n    save.className = \"green\";\r\n    try {{\r\n        let response = await fetch(\"{pathPrefix}/save?id=\" + id, {{ method: \"POST\", body: ta.value }});\r\n        if (response.status === 200) {{\r\n            let text = await response.text();\r\n            if (text.startsWith(\"{(pathPrefix == "" ? "/" : pathPrefix)}\")) {{\r\n                save.innerText = \"Saved!\";\r\n                save.className = \"\";\r\n            }} else {{\r\n                save.innerText = \"Error!\";\r\n                save.className = \"red\";\r\n            }}\r\n        }} else {{\r\n            save.innerText = \"Error!\";\r\n            save.className = \"red\";\r\n        }}\r\n    }} catch {{\r\n        save.innerText = \"Error!\";\r\n        save.className = \"red\";\r\n    }}\r\n}}\r\n\r\nasync function Back(parentLink) {{\r\n    if (save.innerText === \"Save\" && back.innerText == \"Back\") {{\r\n        back.innerText = \"Discard?\";\r\n    }} else {{\r\n        window.location.assign(parentLink);\r\n    }}\r\n}}"),
			"/notes.js" => System.Text.Encoding.UTF8.GetBytes($"let id = GetId();\r\n\r\nfunction GetId() {{\r\n    try {{\r\n        let query = new URLSearchParams(window.location.search);\r\n        if (query.has(\"id\")) {{\r\n            return query.get(\"id\");\r\n        }} else {{\r\n            return \"default\";\r\n        }}\r\n    }} catch {{\r\n        return \"default\";\r\n    }}\r\n}}\r\n\r\nasync function CreateNote() {{\r\n    let name = document.querySelector(\"#name\");\r\n    if (name.value === \"\") {{\r\n        ShowError(\"Enter a name.\");\r\n    }} else {{\r\n        let response = await fetch(\"/api{pathPrefix}/create-note?id=\" + id + \"&name=\" + encodeURIComponent(name.value));\r\n        if (response.status === 200) {{\r\n            let text = await response.text();\r\n            if (text.startsWith(\"{(pathPrefix == "" ? "/" : pathPrefix)}?id=\")) {{\r\n                window.location.assign(text);\r\n            }} else {{\r\n                ShowError(\"Connection failed.\");\r\n            }}\r\n        }} else {{\r\n            ShowError(\"Connection failed.\");\r\n        }}\r\n    }}\r\n}}\r\n\r\nasync function Delete() {{\r\n    let deleteElement = document.querySelector(\"#delete\");\r\n    if (deleteElement.textContent === \"Really?\") {{\r\n        let response = await fetch(\"/api{pathPrefix}/delete?id=\" + id);\r\n        if (response.status === 200) {{\r\n            let text = await response.text();\r\n            if (text.startsWith(\"{(pathPrefix == "" ? "/" : pathPrefix)}\")) {{\r\n                window.location.assign(text);\r\n            }} else {{\r\n                ShowError(\"Connection failed.\");\r\n            }}\r\n        }} else {{\r\n            ShowError(\"Connection failed.\");\r\n        }}\r\n    }} else {{\r\n        deleteElement.textContent = \"Really?\";\r\n    }}\r\n}}\r\n\r\nfunction Navigate(siblingLink) {{\r\n    let saveB = document.querySelector('#save');\r\n    if (saveB !== null && saveB.innerText === \"Save\") {{\r\n        saveB.className = \"red\";\r\n    }} else {{\r\n        window.location.assign(siblingLink);\r\n    }}\r\n}}"),
			"/search.js" => System.Text.Encoding.UTF8.GetBytes($"function Search() {{\r\n    let elem = document.querySelector(\"#search\");\r\n    if (elem.value != \"\") {{\r\n        window.location.assign(\"{pathPrefix}/search?q=\" + encodeURIComponent(elem.value));\r\n    }}\r\n}}"),
			_ => null
		};
	
	public override string? GetFileVersion(string relPath)
		=> relPath switch
		{
			"/icon.ico" => "1694963322000",
			"/icon.png" => "1687982107000",
			"/icon.svg" => "1695860848000",
			"/manifest.json" => "1704140877000",
			"/more.js" => "1693836240000",
			"/move.js" => "1709268978784",
			"/note.js" => "1695899706000",
			"/notes.js" => "1693836285000",
			"/search.js" => "1693794311000",
			_ => null
		};
	
	private static readonly System.Resources.ResourceManager PluginFiles_ResourceManager = new("NotesPlugin.Properties.PluginFiles", typeof(NotesPlugin).Assembly);
}